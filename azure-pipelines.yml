# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  submodules: true

- script: |
    sudo apt-get install -y ninja-build gcc-8 g++-8
  displayName: 'install dependencies'

- script: |
    mkdir -p build/gcc8-release
    cd build/gcc8-release
    CC=gcc-8 CXX=g++-8 ../meson/meson.py --buildtype=release --wrap-mode=forcefallback ../..
    ninja test/unittest
    ./test/unittest --gtest_output=xml
  displayName: 'GCC 8 release'
  timeoutInMinutes: 20

- script: |
    mkdir -p build/clang6-release
    cd build/clang6-release
    CC=clang-6.0 CXX=clang++-6.0 ../meson/meson.py --buildtype=release --wrap-mode=forcefallback ../..
    ninja
    ./test/unittest --gtest_output=xml
  displayName: 'Clang-6 release'
  enabled: false
  timeoutInMinutes: 20

- task: PublishTestResults@2
  inputs:
    testResultsFormat: JUnit
    testResultsFiles: build/**/test_detail.xml
    failTaskOnFailedTests: true

